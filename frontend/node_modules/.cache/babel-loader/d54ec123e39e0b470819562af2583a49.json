{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer, productCreateReducer } from \"./reducers/productReducers\";\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer, productUpdateReducer } from './reducers/orderReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/chasan/Desktop/mythesis/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","productDetailsReducer","productListReducer","productCreateReducer","userDetailsReducer","userRegisterReducer","userSigninReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderMineListReducer","orderPayReducer","productUpdateReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","productCreate","productUpdate","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,WAAnD,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,oBAApD,QAAiF,4BAAjF;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,iBAAlD,EAAoEC,wBAApE,QAAqG,yBAArG;AACA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,oBAHJ,EAIIC,eAJJ,EAKIC,oBALJ,QAMS,0BANT;AASA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,UAAU,EAAC;AACPC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF;AADrF,GAFM;AAKjBG,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnC,GAAmF,EAD7F;AAEDK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAFhH;AAGDM,IAAAA,aAAa,EAAE;AAHd;AALY,CAArB;AAWA,MAAMC,OAAO,GAAG5B,eAAe,CAAC;AAC5B6B,EAAAA,WAAW,EAAEvB,kBADe;AAE5BwB,EAAAA,cAAc,EAAEzB,qBAFY;AAG5BmB,EAAAA,IAAI,EAAEpB,WAHsB;AAI5Bc,EAAAA,UAAU,EAAER,iBAJgB;AAK5BqB,EAAAA,YAAY,EAAEtB,mBALc;AAM5BuB,EAAAA,WAAW,EAAEpB,kBANe;AAO5BqB,EAAAA,YAAY,EAAEpB,mBAPc;AAQ5BqB,EAAAA,QAAQ,EAAEnB,eARkB;AAS5BoB,EAAAA,aAAa,EAAErB,oBATa;AAU5BsB,EAAAA,WAAW,EAAE5B,kBAVe;AAW5B6B,EAAAA,iBAAiB,EAAE1B,wBAXS;AAY5B2B,EAAAA,aAAa,EAAE/B,oBAZa;AAa5BgC,EAAAA,aAAa,EAAEvB;AAba,CAAD,CAA/B;AAiBA,MAAMwB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CzC,OAAvE;AAEA,MAAM0C,KAAK,GAAGzC,WAAW,CAAC0B,OAAD,EAAUX,YAAV,EAAwBuB,eAAe,CAACzC,eAAe,CAACI,KAAD,CAAhB,CAAvC,CAAzB;AAEA,eAAewC,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer, productCreateReducer, } from \"./reducers/productReducers\";\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer,userUpdateProfileReducer, } from './reducers/userReducers';\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderMineListReducer,\n    orderPayReducer,\n    productUpdateReducer,\n  } from './reducers/orderReducers';\n\n\nconst initialState = {\n\n    userSignin:{\n        userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\n    },\n    cart:{\n        cartItems: localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')) : [],\n        shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n        paymentMethod: 'PayPal',\n    },\n};\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList: orderMineListReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}