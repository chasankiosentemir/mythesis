{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from \"./reducers/productReducers\";\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/chasan/Desktop/mythesis/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","productDetailsReducer","productListReducer","userRegisterReducer","userSigninReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,WAAnD,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,yBAAvD;AACA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,eAHJ,QAIS,0BAJT;AAOA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,UAAU,EAAC;AACPC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF;AADrF,GAFM;AAKjBG,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAnC,GAAmF,EAD7F;AAEDK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAFhH;AAGDM,IAAAA,aAAa,EAAE;AAHd;AALY,CAArB;AAWA,MAAMC,OAAO,GAAGvB,eAAe,CAAC;AAC5BwB,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAEpB,qBAFY;AAG5Bc,EAAAA,IAAI,EAAEf,WAHsB;AAI5BS,EAAAA,UAAU,EAAEL,iBAJgB;AAK5BkB,EAAAA,YAAY,EAAEnB,mBALc;AAM5BoB,EAAAA,WAAW,EAAElB,kBANe;AAO5BmB,EAAAA,YAAY,EAAElB,mBAPc;AAQ5BmB,EAAAA,QAAQ,EAAElB;AARkB,CAAD,CAA/B;AAWA,MAAMmB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C/B,OAAvE;AAEA,MAAMgC,KAAK,GAAG/B,WAAW,CAACqB,OAAD,EAAUX,YAAV,EAAwBkB,eAAe,CAAC/B,eAAe,CAACI,KAAD,CAAhB,CAAvC,CAAzB;AAEA,eAAe8B,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from \"./reducers/productReducers\";\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n  } from './reducers/orderReducers';\n\n\nconst initialState = {\n\n    userSignin:{\n        userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null,\n    },\n    cart:{\n        cartItems: localStorage.getItem('cartItems')? JSON.parse(localStorage.getItem('cartItems')) : [],\n        shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n        paymentMethod: 'PayPal',\n    },\n};\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}