{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL } from \"../constant/productConstants\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.respsonse && error.respsonse.data.message ? error.respsonse.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/chasan/Desktop/mythesis/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","respsonse","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,uBAFJ,EAGIC,uBAHJ,EAIIC,iBAJJ,EAKIC,oBALJ,EAMIC,oBANJ,EAOIC,mBAPJ,EAQIC,sBARJ,EASIC,sBATJ,EAUIC,sBAVJ,EAWIC,sBAXJ,EAYIC,mBAZJ,QAaY,8BAbZ;AAeA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAmB;AACjDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEV;AADD,GAAD,CAAR;;AAGA,MAAG;AACC,UAAM;AAACW,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,oBAAP;AAA6BY,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACH,GAHD,CAGE,OAAMG,KAAN,EAAY;AACVL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEX,iBAAP;AAA0Bc,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AACJ,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAe,MAAMR,QAAN,IAAkB;AAC3DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEb,uBAAP;AAAgCgB,IAAAA,OAAO,EAAEI;AAAzC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAW,iBAAgBK,SAAU,EAArC,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEZ,uBAAP;AAAgCe,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAHD,CAGE,OAAMG,KAAN,EAAa;AACXL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEd,oBADD;AAELiB,MAAAA,OAAO,EACPC,KAAK,CAACI,SAAN,IAAmBJ,KAAK,CAACI,SAAN,CAAgBP,IAAhB,CAAqBI,OAAxC,GACED,KAAK,CAACI,SAAN,CAAgBP,IAAhB,CAAqBI,OADvB,GAEED,KAAK,CAACC;AALH,KAAD,CAAR;AAOH;AACJ,CAdM;AAgBP,OAAO,MAAMI,aAAa,GAAG,MAAM,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AAC7DX,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACA,QAAM;AACJkB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAC4B,IAAN,CACrB,eADqB,EAErB,EAFqB,EAGrB;AACEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADX,KAHqB,CAAvB;AAOAjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,sBADC;AAEPS,MAAAA,OAAO,EAAEF,IAAI,CAACgB;AAFP,KAAD,CAAR;AAID,GAZD,CAYE,OAAOb,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACc,QAAN,IAAkBd,KAAK,CAACc,QAAN,CAAejB,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACc,QAAN,CAAejB,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BW,MAAAA,OAAO,EAAEE;AAAtC,KAAD,CAAR;AACD;AACF,CAxBI","sourcesContent":["import Axios from \"axios\";\nimport { \n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n     } from \"../constant/productConstants\";\n\nexport const listProducts = () => async (dispatch) =>{\n    dispatch({\n        type: PRODUCT_LIST_REQUEST\n    });\n    try{\n        const {data} = await Axios.get('/api/products');\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n    } catch(error){\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const detailsProduct = (productId) => async(dispatch) =>{\n    dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try{\n        const {data} = await Axios.get(`/api/products/${productId}`);\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL, \n            payload: \n            error.respsonse && error.respsonse.data.message \n            ? error.respsonse.data.message \n            : error.message, \n        });\n    }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/products',\n        {},\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: PRODUCT_CREATE_SUCCESS,\n        payload: data.product,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n    }\n  };"]},"metadata":{},"sourceType":"module"}