{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_SIGNIN_SUCCESS, USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from '../constant/userConstants';\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.respsonse && error.respsonse.data.message ? error.respsonse.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.respsonse && error.respsonse.data.message ? error.respsonse.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/chasan/Desktop/mythesis/frontend/src/actions/userActions.js"],"names":["Axios","USER_SIGNIN_SUCCESS","USER_SIGNIN_REQUEST","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","respsonse","message","register","name","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","response","updateUserProfile","user","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,mBADJ,EAEIC,mBAFJ,EAGIC,gBAHJ,EAIIC,YAJJ,EAKIC,qBALJ,EAMIC,qBANJ,EAOIC,kBAPJ,EAQIC,iBARJ,EASIC,oBATJ,EAUIC,oBAVJ,EAWIC,wBAXJ,EAYIC,2BAZJ,EAaIC,2BAbJ,QAcO,2BAdP;AAgBA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAkB;AACzDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEhB,mBAAP;AAA4BiB,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMpB,KAAK,CAACqB,IAAN,CAAW,kBAAX,EAA+B;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA/B,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEjB,mBAAP;AAA4BkB,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AAEH,GALD,CAKE,OAAMM,KAAN,EAAY;AACVT,IAAAA,QAAQ,CAAC;AACTC,MAAAA,IAAI,EAAEf,gBADG;AAETgB,MAAAA,OAAO,EACPO,KAAK,CAACC,SAAN,IAAmBD,KAAK,CAACC,SAAN,CAAgBP,IAAhB,CAAqBQ,OAAxC,GACMF,KAAK,CAACC,SAAN,CAAgBP,IAAhB,CAAqBQ,OAD3B,GAEMF,KAAK,CAACE;AALH,KAAD,CAAR;AAOH;AACJ,CAhBM;AAkBP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMf,KAAN,EAAaC,QAAb,KAA0B,MAAMC,QAAN,IAAkB;AAChEA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEb,qBAAP;AAA8Bc,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAAvC,GAAD,CAAR;;AACA,MAAG;AACC,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMpB,KAAK,CAACqB,IAAN,CAAW,oBAAX,EAAiC;AAACS,MAAAA,IAAD;AAAMf,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAAjC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEZ,qBAAP;AAA8Ba,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEjB,mBAAP;AAA4BkB,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AAEH,GAND,CAME,OAAMM,KAAN,EAAY;AACVT,IAAAA,QAAQ,CAAC;AACTC,MAAAA,IAAI,EAAEX,kBADG;AAETY,MAAAA,OAAO,EACPO,KAAK,CAACC,SAAN,IAAmBD,KAAK,CAACC,SAAN,CAAgBP,IAAhB,CAAqBQ,OAAxC,GACMF,KAAK,CAACC,SAAN,CAAgBP,IAAhB,CAAqBQ,OAD3B,GAEMF,KAAK,CAACE;AALH,KAAD,CAAR;AAOH;AACJ,CAjBM;AAmBP,OAAO,MAAMG,OAAO,GAAG,MAAOd,QAAD,IAAa;AACtCK,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,iBAAxB;AACAf,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEd;AAAP,GAAD,CAAR;AAEH,CANM;AAQP,OAAO,MAAM6B,WAAW,GAAIC,MAAD,IAAY,OAAOjB,QAAP,EAAiBkB,QAAjB,KAA8B;AACjElB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,oBAAR;AAA8BU,IAAAA,OAAO,EAAEe;AAAvC,GAAD,CAAR;AACA,QAAM;AACJE,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAACsC,GAAN,CAAW,cAAaJ,MAAO,EAA/B,EAAkC;AACvDK,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AAD8C,KAAlC,CAAvB;AAGAxB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,oBAAR;AAA8BS,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACgB,QAAN,IAAkBhB,KAAK,CAACgB,QAAN,CAAetB,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACgB,QAAN,CAAetB,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,iBAAR;AAA2BW,MAAAA,OAAO,EAAES;AAApC,KAAD,CAAR;AACD;AACF,CAjBI;AAmBL,OAAO,MAAMe,iBAAiB,GAAIC,IAAD,IAAU,OAAO3B,QAAP,EAAiBkB,QAAjB,KAA8B;AACvElB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,2BAAR;AAAqCO,IAAAA,OAAO,EAAEyB;AAA9C,GAAD,CAAR;AACA,QAAM;AACJR,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMpB,KAAK,CAAC6C,GAAN,CAAW,oBAAX,EAAgCD,IAAhC,EAAsC;AAC3DL,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADkD,KAAtC,CAAvB;AAGAxB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,2BAAR;AAAqCM,MAAAA,OAAO,EAAEC;AAA9C,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjB,mBAAR;AAA6BkB,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAME,OAAO,GACXF,KAAK,CAACgB,QAAN,IAAkBhB,KAAK,CAACgB,QAAN,CAAetB,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACgB,QAAN,CAAetB,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE,OAHZ;AAIAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,wBAAR;AAAkCQ,MAAAA,OAAO,EAAES;AAA3C,KAAD,CAAR;AACD;AACF,CAnBM","sourcesContent":["import Axios from \"axios\";\nimport {\n    USER_SIGNIN_SUCCESS,\n    USER_SIGNIN_REQUEST,\n    USER_SIGNIN_FAIL,\n    USER_SIGNOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n} from '../constant/userConstants';\n\nexport const signin = (email, password) => async(dispatch) =>{\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try{\n        const {data} = await Axios.post('api/users/signin', {email, password});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    } catch(error){\n        dispatch({\n        type: USER_SIGNIN_FAIL,\n        payload: \n        error.respsonse && error.respsonse.data.message \n            ? error.respsonse.data.message \n            : error.message, \n    });\n    }\n};\n\nexport const register = (name,email, password) => async(dispatch) =>{\n    dispatch({type: USER_REGISTER_REQUEST, payload: {email, password}});\n    try{\n        const {data} = await Axios.post('api/users/register', {name,email, password});\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n\n    } catch(error){\n        dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: \n        error.respsonse && error.respsonse.data.message \n            ? error.respsonse.data.message \n            : error.message, \n    });\n    }\n};\n\nexport const signout = () => (dispatch) =>{\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({type: USER_SIGNOUT });\n\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.get(`/api/users/${userId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: USER_DETAILS_FAIL, payload: message });\n    }\n  };\n\n  export const updateUserProfile = (user) => async (dispatch, getState) => {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.put(`/api/users/profile`, user, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n    }\n  };"]},"metadata":{},"sourceType":"module"}